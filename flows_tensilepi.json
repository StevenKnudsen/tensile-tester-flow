[
    {
        "id": "80918f6b.83622",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": ""
    },
    {
        "id": "a44cea4be8cdb65d",
        "type": "tab",
        "label": "restart flows",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "1354e179.f3c58f",
        "type": "subflow",
        "name": "Move Steps",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 240,
                "wires": [
                    {
                        "id": "15dfbc0.10a7244"
                    },
                    {
                        "id": "7112ef02.6f41c"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1060,
                "y": 320,
                "wires": [
                    {
                        "id": "4a0ef4c.d41e98c",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "39e2813af6722ac8",
        "type": "subflow",
        "name": "Zero rotation",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 240,
                "y": 300,
                "wires": [
                    {
                        "id": "c0ec6fd801950a02"
                    },
                    {
                        "id": "470526ab314676d0"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1100,
                "y": 380,
                "wires": [
                    {
                        "id": "175255d1149092ca",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "b053200104e6f31e",
        "type": "subflow",
        "name": "Step Actuator",
        "info": "Sends a message to the pwm.c program to set the linear actuator positive speed to the input speed indicated in the message payload. That is followed by a second message to set the speed to zero (0), thus creating in effect a \"step\" movement.\n\nThe direction is set outside this subflow.\n\n@TODO It may be worth having the step duration be a variable.\n\n@TODO It may be worth passing in the direction",
        "category": "",
        "in": [
            {
                "x": 140,
                "y": 380,
                "wires": [
                    {
                        "id": "51ba5624392a149c"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1280,
                "y": 320,
                "wires": [
                    {
                        "id": "17c8d5a25ca0b438",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1280,
                "y": 380,
                "wires": [
                    {
                        "id": "17c8d5a25ca0b438",
                        "port": 1
                    }
                ]
            },
            {
                "x": 1280,
                "y": 440,
                "wires": [
                    {
                        "id": "17c8d5a25ca0b438",
                        "port": 2
                    }
                ]
            }
        ],
        "env": [],
        "meta": {
            "module": "Step Actuator",
            "author": "Steven Knudsen",
            "desc": "Step the linear actuator according to input speed"
        },
        "color": "#DDAA99",
        "inputLabels": [
            "signed speed"
        ],
        "outputLabels": [
            "Message Out",
            "Error",
            "Return result"
        ]
    },
    {
        "id": "36bae6b2.d4014a",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "14c467ce.cf133",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "5bfdd293.b733d4",
        "type": "ui_group",
        "name": "Rotation",
        "tab": "36bae6b2.d4014a",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "fff6763d.538a1",
        "type": "ui_group",
        "name": "Zero",
        "tab": "36bae6b2.d4014a",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "8cd74c77.29fdf",
        "type": "ui_group",
        "name": "Tension",
        "tab": "36bae6b2.d4014a",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "f70d4a1e.05e8d",
        "type": "serial-port",
        "serialport": "/dev/ttyUSB0",
        "serialbaud": "9600",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "558e2096.93465",
        "type": "git-nodes-config",
        "name": "tensile-tester",
        "git": "git@github.com:1tait/tensile-tester.git"
    },
    {
        "id": "f44b46f2.4aaa",
        "type": "ui_group",
        "name": "Data Logging",
        "tab": "36bae6b2.d4014a",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "9911d364.87962",
        "type": "ui_tab",
        "name": "Tab 2",
        "icon": "dashboard",
        "order": 2,
        "disabled": true,
        "hidden": false
    },
    {
        "id": "d1264dc7.80f6e8",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "fff6763d.538a1",
        "order": 11,
        "width": 6,
        "height": 1
    },
    {
        "id": "e0e4421f.6fddc",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "fff6763d.538a1",
        "order": 4,
        "width": 6,
        "height": 1
    },
    {
        "id": "ed5a3cfc.9f4d68",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "fff6763d.538a1",
        "order": 7,
        "width": 6,
        "height": 1
    },
    {
        "id": "7a34a153.27eab",
        "type": "ui_group",
        "name": "Actuator Motion",
        "tab": "36bae6b2.d4014a",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "15dfbc0.10a7244",
        "type": "switch",
        "z": "1354e179.f3c58f",
        "name": "Null Check",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 210,
        "y": 240,
        "wires": [
            [
                "47c67f6d.a251d"
            ]
        ]
    },
    {
        "id": "47c67f6d.a251d",
        "type": "exec",
        "z": "1354e179.f3c58f",
        "command": "/home/pi/tensile-tester/src/moves",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "moves.c",
        "x": 400,
        "y": 240,
        "wires": [
            [
                "eba8baca.3bb228"
            ],
            [
                "f8a33d9e.520128"
            ],
            [
                "79c6127e.b017f4",
                "6982eb95.4d55ac"
            ]
        ]
    },
    {
        "id": "eba8baca.3bb228",
        "type": "debug",
        "z": "1354e179.f3c58f",
        "name": "out",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 200,
        "wires": []
    },
    {
        "id": "f8a33d9e.520128",
        "type": "debug",
        "z": "1354e179.f3c58f",
        "name": "error",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 240,
        "wires": []
    },
    {
        "id": "79c6127e.b017f4",
        "type": "debug",
        "z": "1354e179.f3c58f",
        "name": "return code",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 280,
        "wires": []
    },
    {
        "id": "6982eb95.4d55ac",
        "type": "switch",
        "z": "1354e179.f3c58f",
        "name": "ensuring c program success",
        "property": "payload.code",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 640,
        "y": 320,
        "wires": [
            [
                "4a0ef4c.d41e98c"
            ]
        ]
    },
    {
        "id": "4a0ef4c.d41e98c",
        "type": "function",
        "z": "1354e179.f3c58f",
        "name": "updating total steps",
        "func": "var r_steps = Number(flow.get(\"$parent.stepbuff\"));\nvar t_steps = Number(flow.get(\"$parent.steps\"));\nt_steps += r_steps;\nflow.set(\"$parent.steps\",t_steps);\nmsg.payload = t_steps;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "7112ef02.6f41c",
        "type": "debug",
        "z": "1354e179.f3c58f",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 190,
        "y": 280,
        "wires": []
    },
    {
        "id": "174188e4c23c080f",
        "type": "exec",
        "z": "39e2813af6722ac8",
        "command": "/home/pi/tensile-tester/src/zero",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "zero.c",
        "x": 530,
        "y": 300,
        "wires": [
            [
                "043055f854f081ed"
            ],
            [
                "b0687cac611976cd"
            ],
            [
                "0093cf69877a7b99",
                "2ac7b6f858f9d50c"
            ]
        ]
    },
    {
        "id": "043055f854f081ed",
        "type": "debug",
        "z": "39e2813af6722ac8",
        "name": "out",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 260,
        "wires": []
    },
    {
        "id": "b0687cac611976cd",
        "type": "debug",
        "z": "39e2813af6722ac8",
        "name": "error",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 300,
        "wires": []
    },
    {
        "id": "0093cf69877a7b99",
        "type": "debug",
        "z": "39e2813af6722ac8",
        "name": "return code",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 340,
        "wires": []
    },
    {
        "id": "c0ec6fd801950a02",
        "type": "switch",
        "z": "39e2813af6722ac8",
        "name": "Null Check",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 370,
        "y": 300,
        "wires": [
            [
                "174188e4c23c080f"
            ]
        ]
    },
    {
        "id": "470526ab314676d0",
        "type": "debug",
        "z": "39e2813af6722ac8",
        "name": "input msg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 360,
        "y": 340,
        "wires": []
    },
    {
        "id": "2ac7b6f858f9d50c",
        "type": "switch",
        "z": "39e2813af6722ac8",
        "name": "zero success",
        "property": "payload.code",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 750,
        "y": 380,
        "wires": [
            [
                "175255d1149092ca"
            ]
        ]
    },
    {
        "id": "175255d1149092ca",
        "type": "function",
        "z": "39e2813af6722ac8",
        "name": "updating total steps",
        "func": "//var r_steps = Number(flow.get(\"$parent.stepbuff\"));\n//var t_steps = Number(flow.get(\"$parent.steps\"));\n//t_steps += r_steps;\n//flow.set(\"$parent.steps\",t_steps);\nflow.set(\"$parent.steps\",0);\nmsg.payload = 0;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "17c8d5a25ca0b438",
        "type": "exec",
        "z": "b053200104e6f31e",
        "command": "/home/pi/tensile-tester/src/pwm -p 20 -f 200 -d ",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "pwm.c",
        "x": 1170,
        "y": 380,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "2ce5de3239beeba1",
        "type": "change",
        "z": "b053200104e6f31e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 980,
        "y": 300,
        "wires": [
            [
                "17c8d5a25ca0b438"
            ]
        ]
    },
    {
        "id": "15c23ffc45cb2543",
        "type": "delay",
        "z": "b053200104e6f31e",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 810,
        "y": 300,
        "wires": [
            [
                "2ce5de3239beeba1"
            ]
        ]
    },
    {
        "id": "c05c47bf3442cfff",
        "type": "switch",
        "z": "b053200104e6f31e",
        "name": "positive speed check",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 580,
        "y": 380,
        "wires": [
            [
                "15c23ffc45cb2543",
                "17c8d5a25ca0b438"
            ]
        ]
    },
    {
        "id": "51ba5624392a149c",
        "type": "function",
        "z": "b053200104e6f31e",
        "name": "Parse signed speed",
        "func": "//\n// Check the input message payload for a signed number\n// representing the speed and direction for the linear actuator.\n// Parse, and generate positive speed and direction message tuple.\n\nvar signedSpeed = -1; // set to unallowed value in case input is not a number\nvar direction = flow.get(\"direction\");\n\n// Check to see the input payload is a number.\nif (typeof(msg.payload) == \"number\") {\n    signedSpeed = msg.payload;\n    if (signedSpeed < 0) {\n        direction = 0; // extend\n        signedSpeed = -1*signedSpeed;\n    } else {\n        direction = 1; // retract\n    }\n}\n\n//node.warn(\"direction \"+direction);\n\nmsg.payload = signedSpeed;\nvar dirMsg = {payload : direction};\n\nreturn [dirMsg, msg];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 380,
        "wires": [
            [
                "c844787d8434ef1a"
            ],
            [
                "c05c47bf3442cfff"
            ]
        ]
    },
    {
        "id": "c844787d8434ef1a",
        "type": "rpi-gpio out",
        "z": "b053200104e6f31e",
        "name": "DIR",
        "pin": "21",
        "set": "",
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 530,
        "y": 260,
        "wires": []
    },
    {
        "id": "c17fc7caf3fdcfe2",
        "type": "inject",
        "z": "b053200104e6f31e",
        "name": "Initialize 0",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 330,
        "y": 160,
        "wires": [
            [
                "c844787d8434ef1a",
                "15c23ffc45cb2543"
            ]
        ],
        "info": "Used to initialize a zero state for most of the tension UI elements and variables"
    },
    {
        "id": "6e912044.d721b",
        "type": "ui_gauge",
        "z": "80918f6b.83622",
        "name": "angle_gauge",
        "group": "5bfdd293.b733d4",
        "order": 1,
        "width": 6,
        "height": 5,
        "gtype": "compass",
        "title": "Current Angle",
        "label": "Degrees",
        "format": "{{value}}",
        "min": 0,
        "max": "360",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 730,
        "y": 140,
        "wires": []
    },
    {
        "id": "4d3fe9f7.be2c68",
        "type": "ui_form",
        "z": "80918f6b.83622",
        "name": "",
        "label": "Move Steps (160 steps/deg)",
        "group": "5bfdd293.b733d4",
        "order": 6,
        "width": 6,
        "height": 1,
        "options": [
            {
                "label": "Steps",
                "value": "steps",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "steps": ""
        },
        "payload": "",
        "submit": "Move",
        "cancel": "Clear",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 220,
        "y": 600,
        "wires": [
            [
                "b093da73.0fef8"
            ]
        ]
    },
    {
        "id": "b093da73.0fef8",
        "type": "function",
        "z": "80918f6b.83622",
        "name": "Parameter Configuration",
        "func": "var steps = msg.payload.steps;\nflow.set(\"stepbuff\",steps);\nmsg.payload = \" -p \"+17+\" -s \"+steps;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 600,
        "wires": [
            [
                "4fa36e76.5ec5f",
                "1f5f9829.8a1ed"
            ]
        ],
        "info": "Sets the input arguments for the move steps function based off of the input steps"
    },
    {
        "id": "d2f23bb3.235",
        "type": "ui_form",
        "z": "80918f6b.83622",
        "name": "",
        "label": "Change Rel. Angle (min 0.00625)",
        "group": "5bfdd293.b733d4",
        "order": 4,
        "width": 6,
        "height": 1,
        "options": [
            {
                "label": "Degrees",
                "value": "degrees",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "degrees": ""
        },
        "payload": "",
        "submit": "Move",
        "cancel": "Clear",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 240,
        "y": 660,
        "wires": [
            [
                "c12261aa.42d38"
            ]
        ]
    },
    {
        "id": "c12261aa.42d38",
        "type": "function",
        "z": "80918f6b.83622",
        "name": "Parameter Configuration",
        "func": "var steps = msg.payload.degrees*160;\nsteps = steps;\nflow.set(\"stepbuff\",steps);\nmsg.payload = \" -p \"+17+\" -s \"+steps;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 660,
        "wires": [
            [
                "1f5f9829.8a1ed",
                "4fa36e76.5ec5f"
            ]
        ],
        "info": "Sets input arguments for move steps function by converting angle to steps (1 degree=80 steps) and sending to change the current angle"
    },
    {
        "id": "c0a04755.a50fe",
        "type": "inject",
        "z": "80918f6b.83622",
        "name": "Initialize Angle",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 240,
        "y": 80,
        "wires": [
            [
                "7b0d4e3f.19b1e8",
                "d4f6cda8.7cf708"
            ]
        ],
        "info": "Used to initialize many variabled to zero "
    },
    {
        "id": "57dddba2.e0c474",
        "type": "change",
        "z": "80918f6b.83622",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "steps",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 960,
        "y": 60,
        "wires": [
            [
                "789ec2c7.98ea2c"
            ]
        ]
    },
    {
        "id": "7b0d4e3f.19b1e8",
        "type": "change",
        "z": "80918f6b.83622",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "stepbuff",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 100,
        "wires": [
            [
                "c8b7376e.1181e8"
            ]
        ]
    },
    {
        "id": "1f5f9829.8a1ed",
        "type": "subflow:1354e179.f3c58f",
        "z": "80918f6b.83622",
        "name": "",
        "env": [],
        "x": 910,
        "y": 660,
        "wires": [
            [
                "f5ce3f4.99cb34"
            ]
        ]
    },
    {
        "id": "17609f8c.64fb68",
        "type": "function",
        "z": "80918f6b.83622",
        "name": "Total steps to degrees",
        "func": "var steps = Number(flow.get(\"steps\"));\nwhile(steps<0)steps+=(28800*2);\nvar extra = steps % (28800*2);\nextra = extra/80/2;\nmsg.payload = extra;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 140,
        "wires": [
            [
                "6e912044.d721b"
            ]
        ]
    },
    {
        "id": "d15dd95e.1b0b5",
        "type": "link in",
        "z": "80918f6b.83622",
        "name": "",
        "links": [
            "197981d3.f520be",
            "789ec2c7.98ea2c",
            "d46740df.ae9938",
            "e3e6548a.3b79a8",
            "f5ce3f4.99cb34",
            "71d7a834.b67f68"
        ],
        "x": 295,
        "y": 160,
        "wires": [
            [
                "17609f8c.64fb68",
                "fffa9aa2.385c98"
            ]
        ],
        "info": "This link in is used whenever code rotates the rotational axis, that way it can update the angle gauge and record the last known position to the file"
    },
    {
        "id": "f5ce3f4.99cb34",
        "type": "link out",
        "z": "80918f6b.83622",
        "name": "",
        "links": [
            "d15dd95e.1b0b5",
            "9f64c76c.5779d"
        ],
        "x": 1035,
        "y": 660,
        "wires": []
    },
    {
        "id": "789ec2c7.98ea2c",
        "type": "link out",
        "z": "80918f6b.83622",
        "name": "",
        "links": [
            "d15dd95e.1b0b5",
            "9f64c76c.5779d"
        ],
        "x": 1135,
        "y": 60,
        "wires": []
    },
    {
        "id": "13442d07.5a3533",
        "type": "ui_form",
        "z": "80918f6b.83622",
        "name": "",
        "label": "Set Abs. Angle (res 0.00625)",
        "group": "5bfdd293.b733d4",
        "order": 5,
        "width": 6,
        "height": 1,
        "options": [
            {
                "label": "Degrees",
                "value": "degrees",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "degrees": ""
        },
        "payload": "",
        "submit": "Move",
        "cancel": "Clear",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": false,
        "className": "",
        "x": 220,
        "y": 720,
        "wires": [
            [
                "330479a6.a03ed6"
            ]
        ]
    },
    {
        "id": "330479a6.a03ed6",
        "type": "function",
        "z": "80918f6b.83622",
        "name": "Parameter Configuration",
        "func": "var angle = msg.payload.degrees;\nvar position = flow.get(\"steps\");\nposition = (position) % (28800*2);\n\nvar dir1 = angle*160-position;\nvar dir2 = 0;\n\n//caclulate rotation in both forwards and reverse directions\nif(dir1>0){\n    dir2 = -(28800*2)+dir1;\n} else {\n    dir2 = (28800*2)+dir1;\n}\n\n// use direction with shortest path of the two\nvar steps = dir2;\nif(Math.abs(dir1)<Math.abs(dir2)){\n    steps = dir1;\n}\n\nflow.set(\"stepbuff\",steps);\nmsg.payload = \" -p \"+17+\" -s \"+steps;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 720,
        "wires": [
            [
                "4fa36e76.5ec5f",
                "1f5f9829.8a1ed"
            ]
        ],
        "info": "Sets the input arguments of the move steps function by calculating the required change in angle to achieve the desired angle via the shortest path, then converting that to steps (1 degree = 80 steps) "
    },
    {
        "id": "e8ac446d.07e918",
        "type": "comment",
        "z": "80918f6b.83622",
        "name": "Rotational UI Elements",
        "info": "",
        "x": 420,
        "y": 560,
        "wires": []
    },
    {
        "id": "94f4b77b.af2378",
        "type": "comment",
        "z": "80918f6b.83622",
        "name": "Zeroing UI Elements",
        "info": "This section contains all the UI sections used in the \"Zero\" section of the web interface",
        "x": 390,
        "y": 1000,
        "wires": []
    },
    {
        "id": "38d6b1d3.30e246",
        "type": "ui_text",
        "z": "80918f6b.83622",
        "group": "5bfdd293.b733d4",
        "order": 2,
        "width": 6,
        "height": 1,
        "name": "Motor Activity",
        "label": "Motor: ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 510,
        "y": 280,
        "wires": []
    },
    {
        "id": "27548ba7.176c64",
        "type": "change",
        "z": "80918f6b.83622",
        "name": "Inactive",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Inactive",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 310,
        "y": 260,
        "wires": [
            [
                "38d6b1d3.30e246"
            ]
        ],
        "info": "THis link in is used whenever the motor stops moving"
    },
    {
        "id": "e451cec7.54276",
        "type": "change",
        "z": "80918f6b.83622",
        "name": "Active",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Active",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 300,
        "wires": [
            [
                "38d6b1d3.30e246"
            ]
        ]
    },
    {
        "id": "9f64c76c.5779d",
        "type": "link in",
        "z": "80918f6b.83622",
        "name": "",
        "links": [
            "f5ce3f4.99cb34",
            "789ec2c7.98ea2c",
            "dc71917f.1dc6e8",
            "e3e6548a.3b79a8",
            "71d7a834.b67f68"
        ],
        "x": 165,
        "y": 260,
        "wires": [
            [
                "27548ba7.176c64"
            ]
        ]
    },
    {
        "id": "35036829.841c5",
        "type": "link in",
        "z": "80918f6b.83622",
        "name": "",
        "links": [
            "4fa36e76.5ec5f",
            "92a3fec2.7c0c58",
            "a693f7cdce8716fb"
        ],
        "x": 165,
        "y": 300,
        "wires": [
            [
                "e451cec7.54276"
            ]
        ],
        "info": "This link in is used whenever the motor starts moving"
    },
    {
        "id": "4fa36e76.5ec5f",
        "type": "link out",
        "z": "80918f6b.83622",
        "name": "",
        "links": [
            "35036829.841c5"
        ],
        "x": 735,
        "y": 660,
        "wires": []
    },
    {
        "id": "53fe02f3.c4097c",
        "type": "file",
        "z": "80918f6b.83622",
        "name": "Write last position",
        "filename": "/home/pi/tensile-tester/log/position",
        "appendNewline": false,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 750,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "fffa9aa2.385c98",
        "type": "change",
        "z": "80918f6b.83622",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "steps",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 180,
        "wires": [
            [
                "53fe02f3.c4097c"
            ]
        ]
    },
    {
        "id": "d4f6cda8.7cf708",
        "type": "file in",
        "z": "80918f6b.83622",
        "name": "Read last position",
        "filename": "/home/pi/tensile-tester/log/position",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 470,
        "y": 60,
        "wires": [
            [
                "1783ffbb.4a0478"
            ]
        ],
        "info": "Reading last known position from the file to recall position in case of power failure"
    },
    {
        "id": "1783ffbb.4a0478",
        "type": "function",
        "z": "80918f6b.83622",
        "name": "String to Int",
        "func": "msg.payload = Number(msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 60,
        "wires": [
            [
                "57dddba2.e0c474"
            ]
        ]
    },
    {
        "id": "afa27199.a36d68",
        "type": "comment",
        "z": "80918f6b.83622",
        "name": "Tension UI Elements",
        "info": "This section contains the UI elements contained in the \"Tension\" section of the web interface",
        "x": 510,
        "y": 1780,
        "wires": []
    },
    {
        "id": "34f78899.aa8fb8",
        "type": "ui_gauge",
        "z": "80918f6b.83622",
        "name": "Tension",
        "group": "8cd74c77.29fdf",
        "order": 1,
        "width": 6,
        "height": 4,
        "gtype": "gage",
        "title": "Sample Tension",
        "label": "kg",
        "format": "{{value}}",
        "min": "-10",
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 920,
        "y": 2400,
        "wires": []
    },
    {
        "id": "3e4c918a.a142d6",
        "type": "ui_form",
        "z": "80918f6b.83622",
        "name": "",
        "label": "Set Tension (Absolute)",
        "group": "8cd74c77.29fdf",
        "order": 5,
        "width": 6,
        "height": 1,
        "options": [
            {
                "label": "N",
                "value": "newtons",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "newtons": ""
        },
        "payload": "",
        "submit": "Change",
        "cancel": "Clear",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 300,
        "y": 2220,
        "wires": [
            [
                "744567f4.5370a8"
            ]
        ]
    },
    {
        "id": "6b0c7b28.ed902c",
        "type": "ui_text",
        "z": "80918f6b.83622",
        "group": "8cd74c77.29fdf",
        "order": 2,
        "width": 6,
        "height": 1,
        "name": "Target Tension",
        "label": "Target Tension: ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 980,
        "y": 2160,
        "wires": []
    },
    {
        "id": "c8b7376e.1181e8",
        "type": "change",
        "z": "80918f6b.83622",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "target",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 100,
        "wires": [
            [
                "a94d053e.1fc64"
            ]
        ]
    },
    {
        "id": "744567f4.5370a8",
        "type": "change",
        "z": "80918f6b.83622",
        "name": "Set setpoint",
        "rules": [
            {
                "t": "set",
                "p": "setpoint",
                "pt": "flow",
                "to": "payload.newtons",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 2220,
        "wires": [
            [
                "c1850dd81534ec50"
            ]
        ]
    },
    {
        "id": "78b6241.a0872dc",
        "type": "serial in",
        "z": "80918f6b.83622",
        "name": "Receive tension meas.",
        "serial": "f70d4a1e.05e8d",
        "x": 300,
        "y": 2360,
        "wires": [
            [
                "42a92748.0dd5f"
            ]
        ]
    },
    {
        "id": "42a92748.0dd5f",
        "type": "function",
        "z": "80918f6b.83622",
        "name": "Extract raw values",
        "func": "var serial = msg.payload;\nvar values = serial.split(\",\");\nmsg.payload = Number(values[0])*-1;\nflow.set(\"tension\",msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 2360,
        "wires": [
            [
                "2320837f46723430"
            ]
        ]
    },
    {
        "id": "1eb85d02.13af53",
        "type": "inject",
        "z": "80918f6b.83622",
        "name": "Initialize 0",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 70,
        "y": 2160,
        "wires": [
            [
                "5a20bfb3.b0819",
                "800518d6.4f2c6",
                "acd047a5.ee8e1",
                "410d9904.200fe",
                "8fbf5e5b.1ff25",
                "a3291006a20c4eb1",
                "336da45a6b971757",
                "6b0c7b28.ed902c"
            ]
        ],
        "info": "Used to initialize a zero state for most of the tension UI elements and variables"
    },
    {
        "id": "8fbf5e5b.1ff25",
        "type": "ui_slider",
        "z": "80918f6b.83622",
        "name": "",
        "label": "Actuator Speed",
        "tooltip": "",
        "group": "7a34a153.27eab",
        "order": 7,
        "width": 6,
        "height": 1,
        "passthru": false,
        "outs": "all",
        "topic": "topic",
        "topicType": "msg",
        "min": 0,
        "max": "100",
        "step": "5",
        "className": "",
        "x": 280,
        "y": 2060,
        "wires": [
            [
                "acd047a5.ee8e1",
                "5a20bfb3.b0819"
            ]
        ]
    },
    {
        "id": "2bd337dc.b37d08",
        "type": "serial out",
        "z": "80918f6b.83622",
        "name": "Arduino out",
        "serial": "f70d4a1e.05e8d",
        "x": 970,
        "y": 1260,
        "wires": []
    },
    {
        "id": "769f2252.c4b474",
        "type": "ui_button",
        "z": "80918f6b.83622",
        "name": "",
        "group": "fff6763d.538a1",
        "order": 5,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Zero Load Cell",
        "tooltip": "Sets current tension of load cell to be zero",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 180,
        "y": 1140,
        "wires": [
            [
                "592e2a03.98fa14",
                "ed93f2.0e03fc1",
                "63178dd7.6b69b4"
            ]
        ]
    },
    {
        "id": "ed93f2.0e03fc1",
        "type": "delay",
        "z": "80918f6b.83622",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 420,
        "y": 1180,
        "wires": [
            [
                "13513432.83c724"
            ]
        ]
    },
    {
        "id": "63178dd7.6b69b4",
        "type": "delay",
        "z": "80918f6b.83622",
        "name": "",
        "pauseType": "delay",
        "timeout": "6",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 420,
        "y": 1220,
        "wires": [
            [
                "8f04ab9b.6ff1"
            ]
        ]
    },
    {
        "id": "592e2a03.98fa14",
        "type": "change",
        "z": "80918f6b.83622",
        "name": "enter settings menu",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "x",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 1140,
        "wires": [
            [
                "2bd337dc.b37d08"
            ]
        ]
    },
    {
        "id": "13513432.83c724",
        "type": "change",
        "z": "80918f6b.83622",
        "name": "zero cell",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 1180,
        "wires": [
            [
                "2bd337dc.b37d08"
            ]
        ]
    },
    {
        "id": "8f04ab9b.6ff1",
        "type": "change",
        "z": "80918f6b.83622",
        "name": "exit settings menu",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "x",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 1220,
        "wires": [
            [
                "2bd337dc.b37d08"
            ]
        ]
    },
    {
        "id": "410d9904.200fe",
        "type": "ui_switch",
        "z": "80918f6b.83622",
        "name": "",
        "label": "Actuator on",
        "tooltip": "Turns on linear actuator",
        "group": "7a34a153.27eab",
        "order": 2,
        "width": 6,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 270,
        "y": 2020,
        "wires": [
            [
                "800518d6.4f2c6"
            ]
        ]
    },
    {
        "id": "800518d6.4f2c6",
        "type": "change",
        "z": "80918f6b.83622",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "actuator",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 2020,
        "wires": [
            []
        ]
    },
    {
        "id": "b62d5f82.e16828",
        "type": "rpi-gpio out",
        "z": "80918f6b.83622",
        "name": "",
        "pin": "27",
        "set": true,
        "level": "1",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 620,
        "y": 760,
        "wires": []
    },
    {
        "id": "7ab27f41.f4013",
        "type": "inject",
        "z": "80918f6b.83622",
        "name": "Initialize 1",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 190,
        "y": 760,
        "wires": [
            [
                "5437fe62.0f1d68"
            ]
        ]
    },
    {
        "id": "5437fe62.0f1d68",
        "type": "ui_switch",
        "z": "80918f6b.83622",
        "name": "",
        "label": "Enable Stepper",
        "tooltip": "Enables or disables Stepper motors for rotation. System should be re-zeroed if steppers are disabled",
        "group": "5bfdd293.b733d4",
        "order": 3,
        "width": 6,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "x": 400,
        "y": 760,
        "wires": [
            [
                "b62d5f82.e16828"
            ]
        ],
        "info": "This switch enables the motion of the stepper motor "
    },
    {
        "id": "8425b51c.d35498",
        "type": "comment",
        "z": "80918f6b.83622",
        "name": "Data logging",
        "info": "",
        "x": 390,
        "y": 2620,
        "wires": []
    },
    {
        "id": "a24fab35.336ac",
        "type": "inject",
        "z": "80918f6b.83622",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "0.1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 2760,
        "wires": [
            [
                "928be99b.cca8"
            ]
        ]
    },
    {
        "id": "ba50a1ae.9c9b5",
        "type": "ui_form",
        "z": "80918f6b.83622",
        "name": "",
        "label": "Enable Data Logging",
        "group": "f44b46f2.4aaa",
        "order": 2,
        "width": 6,
        "height": 1,
        "options": [
            {
                "label": "Filename",
                "value": "filename",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "filename": ""
        },
        "payload": "",
        "submit": "Start Logging",
        "cancel": "clear",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "x": 200,
        "y": 2720,
        "wires": [
            [
                "5ba1d05e.f096e"
            ]
        ]
    },
    {
        "id": "928be99b.cca8",
        "type": "switch",
        "z": "80918f6b.83622",
        "name": "if: logging enabled",
        "property": "log",
        "propertyType": "flow",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 430,
        "y": 2760,
        "wires": [
            [
                "9b79bb10.2f743"
            ]
        ]
    },
    {
        "id": "5ba1d05e.f096e",
        "type": "change",
        "z": "80918f6b.83622",
        "name": "Enable data logging",
        "rules": [
            {
                "t": "set",
                "p": "log",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "filename",
                "pt": "flow",
                "to": "payload.filename",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 2720,
        "wires": [
            [
                "8fdc6e3.086059"
            ]
        ]
    },
    {
        "id": "7d1708e9.f53e28",
        "type": "ui_button",
        "z": "80918f6b.83622",
        "name": "",
        "group": "f44b46f2.4aaa",
        "order": 3,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Stop Data Logging",
        "tooltip": "Stops currently running data logging",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "false",
        "payloadType": "bool",
        "topic": "payload.log",
        "topicType": "msg",
        "x": 210,
        "y": 2680,
        "wires": [
            [
                "a8eb6f8d.c7e678"
            ]
        ]
    },
    {
        "id": "a8eb6f8d.c7e678",
        "type": "change",
        "z": "80918f6b.83622",
        "name": "Disable Data Logging",
        "rules": [
            {
                "t": "set",
                "p": "log",
                "pt": "flow",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 2680,
        "wires": [
            [
                "8fdc6e3.086059"
            ]
        ]
    },
    {
        "id": "34af324e.a4172e",
        "type": "file",
        "z": "80918f6b.83622",
        "name": "Appending to log file",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 840,
        "y": 2760,
        "wires": [
            []
        ]
    },
    {
        "id": "9b79bb10.2f743",
        "type": "function",
        "z": "80918f6b.83622",
        "name": "Combining data",
        "func": "file = flow.get(\"filename\").toString();\nsteps = Number(flow.get(\"steps\"));\nzero = Number(flow.get(\"zero\"));\nlocation = steps+zero;\ntension = Number(flow.get(\"tension\"));\ntime = msg.payload;\n\nmsg.filename = \"/home/pi/tensile-tester/log/\"+file+\".csv\";\nmsg.payload = \"\"+time+\",\"+tension+\",\"+location;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 2760,
        "wires": [
            [
                "34af324e.a4172e"
            ]
        ]
    },
    {
        "id": "2e9cc714.60de28",
        "type": "ui_text",
        "z": "80918f6b.83622",
        "group": "f44b46f2.4aaa",
        "order": 1,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "Data Logging: ",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "x": 940,
        "y": 2700,
        "wires": []
    },
    {
        "id": "8fdc6e3.086059",
        "type": "function",
        "z": "80918f6b.83622",
        "name": "Data logging message config",
        "func": "log = flow.get(\"log\");\nfile = flow.get(\"filename\");\nif(log){\n    msg.payload = \" Currently logging data in file: \"+file;\n} else {\n    msg.payload = \" Not currently logging data\"\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 2700,
        "wires": [
            [
                "2e9cc714.60de28"
            ]
        ]
    },
    {
        "id": "248905ae.c938e2",
        "type": "ui_form",
        "z": "80918f6b.83622",
        "name": "",
        "label": "Calibrate load cell",
        "group": "fff6763d.538a1",
        "order": 6,
        "width": 6,
        "height": 1,
        "options": [
            {
                "label": "Calibration mass (kg)",
                "value": "calibrate",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "calibrate": ""
        },
        "payload": "",
        "submit": "Calibrate",
        "cancel": "Clear",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "x": 190,
        "y": 1280,
        "wires": [
            [
                "39dbf044.a8fae",
                "8f60329.50165d",
                "cc5a976f.369528",
                "86364c63.ae3fa8",
                "bad879c0.ee47c8",
                "8e80a7e2.52d19"
            ]
        ]
    },
    {
        "id": "bad879c0.ee47c8",
        "type": "change",
        "z": "80918f6b.83622",
        "name": "enter settings menu",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "x",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 1280,
        "wires": [
            [
                "2bd337dc.b37d08"
            ]
        ]
    },
    {
        "id": "f0fbc852.098798",
        "type": "change",
        "z": "80918f6b.83622",
        "name": "weight stable",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "t",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 1360,
        "wires": [
            [
                "2bd337dc.b37d08"
            ]
        ]
    },
    {
        "id": "f23fc17c.e0ff18",
        "type": "change",
        "z": "80918f6b.83622",
        "name": "exit settings menu",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "x",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 1480,
        "wires": [
            [
                "2bd337dc.b37d08"
            ]
        ]
    },
    {
        "id": "acd047a5.ee8e1",
        "type": "change",
        "z": "80918f6b.83622",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "actuatorspeed",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 2060,
        "wires": [
            []
        ]
    },
    {
        "id": "34544491.e7b884",
        "type": "ui_button",
        "z": "80918f6b.83622",
        "name": "relative zero",
        "group": "fff6763d.538a1",
        "order": 9,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Set Relative Zero",
        "tooltip": "Sets current position as relative zero",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "payload",
        "topicType": "msg",
        "x": 230,
        "y": 1580,
        "wires": [
            [
                "ebdfd179.d29428"
            ]
        ]
    },
    {
        "id": "ebadce0.ba637b",
        "type": "ui_button",
        "z": "80918f6b.83622",
        "name": "restore zero",
        "group": "fff6763d.538a1",
        "order": 10,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Restore Original Zero",
        "tooltip": "Restores original zero from relative position",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 230,
        "y": 1620,
        "wires": [
            [
                "9555cdf.8f4753"
            ]
        ]
    },
    {
        "id": "44a68648.2495f",
        "type": "ui_text",
        "z": "80918f6b.83622",
        "group": "fff6763d.538a1",
        "order": 8,
        "width": 6,
        "height": 1,
        "name": "Zero message",
        "label": "Relative Zero: ",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 720,
        "y": 1600,
        "wires": []
    },
    {
        "id": "ebdfd179.d29428",
        "type": "function",
        "z": "80918f6b.83622",
        "name": "Back up current position",
        "func": "var steps = flow.get(\"steps\");\nflow.set(\"zero\",steps);\nflow.set(\"steps\",0)\n\nsteps = steps/160;\nmsg.payload = steps + \" degrees\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 1580,
        "wires": [
            [
                "44a68648.2495f",
                "197981d3.f520be"
            ]
        ]
    },
    {
        "id": "9555cdf.8f4753",
        "type": "function",
        "z": "80918f6b.83622",
        "name": "Restore original zero",
        "func": "var steps = flow.get(\"steps\");\nvar zero = flow.get(\"zero\");\n\nflow.set(\"steps\",steps+zero);\nflow.set(\"zero\",0);\n\nmsg.payload = \"Inactive\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1620,
        "wires": [
            [
                "44a68648.2495f",
                "d46740df.ae9938"
            ]
        ]
    },
    {
        "id": "197981d3.f520be",
        "type": "link out",
        "z": "80918f6b.83622",
        "name": "",
        "links": [
            "d15dd95e.1b0b5"
        ],
        "x": 655,
        "y": 1560,
        "wires": []
    },
    {
        "id": "d46740df.ae9938",
        "type": "link out",
        "z": "80918f6b.83622",
        "name": "",
        "links": [
            "d15dd95e.1b0b5"
        ],
        "x": 655,
        "y": 1640,
        "wires": []
    },
    {
        "id": "114ae7e9.d2c788",
        "type": "change",
        "z": "80918f6b.83622",
        "name": "select calibration",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 1320,
        "wires": [
            [
                "2bd337dc.b37d08"
            ]
        ]
    },
    {
        "id": "b7888779.e4e17",
        "type": "change",
        "z": "80918f6b.83622",
        "name": "newline",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[13,10]",
                "tot": "bin"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 1440,
        "wires": [
            [
                "2bd337dc.b37d08"
            ]
        ]
    },
    {
        "id": "39dbf044.a8fae",
        "type": "delay",
        "z": "80918f6b.83622",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 400,
        "y": 1360,
        "wires": [
            [
                "f0fbc852.098798"
            ]
        ]
    },
    {
        "id": "8f60329.50165d",
        "type": "delay",
        "z": "80918f6b.83622",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 400,
        "y": 1400,
        "wires": [
            [
                "e43eccd1.2901e8"
            ]
        ]
    },
    {
        "id": "cc5a976f.369528",
        "type": "delay",
        "z": "80918f6b.83622",
        "name": "",
        "pauseType": "delay",
        "timeout": "15",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 400,
        "y": 1480,
        "wires": [
            [
                "f23fc17c.e0ff18"
            ]
        ]
    },
    {
        "id": "86364c63.ae3fa8",
        "type": "delay",
        "z": "80918f6b.83622",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 400,
        "y": 1320,
        "wires": [
            [
                "114ae7e9.d2c788"
            ]
        ]
    },
    {
        "id": "8e80a7e2.52d19",
        "type": "delay",
        "z": "80918f6b.83622",
        "name": "",
        "pauseType": "delay",
        "timeout": "12",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 400,
        "y": 1440,
        "wires": [
            [
                "b7888779.e4e17"
            ]
        ]
    },
    {
        "id": "7a0d3959.069148",
        "type": "split",
        "z": "80918f6b.83622",
        "name": "split",
        "splt": "1",
        "spltType": "len",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 690,
        "y": 1400,
        "wires": [
            [
                "2bd337dc.b37d08"
            ]
        ]
    },
    {
        "id": "e43eccd1.2901e8",
        "type": "change",
        "z": "80918f6b.83622",
        "name": "value",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.calibrate",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 1400,
        "wires": [
            [
                "7a0d3959.069148"
            ]
        ]
    },
    {
        "id": "5a20bfb3.b0819",
        "type": "ui_text",
        "z": "80918f6b.83622",
        "group": "7a34a153.27eab",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "Speed",
        "label": "Speed:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 550,
        "y": 2100,
        "wires": []
    },
    {
        "id": "a94d053e.1fc64",
        "type": "change",
        "z": "80918f6b.83622",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "zero",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 950,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "166637d5.b60258",
        "type": "ui_switch",
        "z": "80918f6b.83622",
        "name": "Manual Actuator Control",
        "label": "Toggle Manual/Automatic control",
        "tooltip": "Switches between manual and automatic control of the linear actuator",
        "group": "7a34a153.27eab",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 310,
        "y": 1860,
        "wires": [
            [
                "3371944d6a663ef5",
                "22c6eae9272877dc"
            ]
        ]
    },
    {
        "id": "aa5ca567.9d32d",
        "type": "ui_button",
        "z": "80918f6b.83622",
        "name": "",
        "group": "7a34a153.27eab",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Actuator Extend",
        "tooltip": "Runs the actuator for 100ms",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "actuatorspeed",
        "payloadType": "flow",
        "topic": "topic",
        "topicType": "msg",
        "x": 860,
        "y": 2020,
        "wires": [
            [
                "b25261d0fe508a2d"
            ]
        ]
    },
    {
        "id": "cbd62b22.8bf5f8",
        "type": "comment",
        "z": "80918f6b.83622",
        "name": "Serial communication information",
        "info": "This section is for interfacing with the openscale over serial and accessing its built-in menus. The delays are so that the commands are revieved in the right order and with the right timing to operate the menus properly",
        "x": 990,
        "y": 1180,
        "wires": []
    },
    {
        "id": "ae20f800.83ba3",
        "type": "function",
        "z": "80918f6b.83622",
        "name": "format for retraction",
        "func": "var actuator = flow.get(\"actuator\");\nvar pidEnabled = flow.get(\"pidEnabled\");\n\nif((actuator == 1) && (pidEnabled == 0)) { \n    msg.payload = Math.abs(msg.payload);\n} else {\n    msg.payload = 0; \n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 1980,
        "wires": [
            [
                "86cf2b51dc506b9f"
            ]
        ]
    },
    {
        "id": "e492b039.a32148",
        "type": "inject",
        "z": "80918f6b.83622",
        "name": "Initialize 0",
        "props": [
            {
                "p": "payload.newtons",
                "v": "0",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 230,
        "y": 2640,
        "wires": [
            [
                "a8eb6f8d.c7e678"
            ]
        ]
    },
    {
        "id": "aea49584.63dc3",
        "type": "inject",
        "z": "80918f6b.83622",
        "name": "Initialize 0",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 230,
        "y": 1660,
        "wires": [
            [
                "9555cdf.8f4753"
            ]
        ],
        "info": "Used to initialize a zero state for most of the tension UI elements and variables"
    },
    {
        "id": "8501d681.1f13d8",
        "type": "ui_text",
        "z": "80918f6b.83622",
        "group": "7a34a153.27eab",
        "order": 1,
        "width": "6",
        "height": "3",
        "name": "",
        "label": "Warning: This actuator is powerful enough to damage the machine and injure people.",
        "format": " Whenever a sample is loaded or being loaded always use slow speeds (<150). ",
        "layout": "col-center",
        "x": 1080,
        "y": 1780,
        "wires": []
    },
    {
        "id": "2948d50f0b3ce64a",
        "type": "function",
        "z": "80918f6b.83622",
        "name": "Parameter Configuration",
        "func": "var position = flow.get(\"steps\");\nposition = (position) % (28800*2);\n\nif (position < 28800) {\n    msg.payload = \" -f \"+2600+\" -d forward \";\n} else {\n    msg.payload = \" -f \"+2600+\" -d backward \";\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 1060,
        "wires": [
            [
                "a693f7cdce8716fb",
                "0a483f02bb39d601"
            ]
        ],
        "info": "Sets the required values to return to the nearest angle of zero (this is regardless of how many full revolutions done)"
    },
    {
        "id": "b0f10c77.13abe",
        "type": "ui_button",
        "z": "80918f6b.83622",
        "name": "zero_button",
        "group": "fff6763d.538a1",
        "order": 12,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Zero rotation",
        "tooltip": "Zeros machine using microswitch",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "0",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 170,
        "y": 1060,
        "wires": [
            [
                "2948d50f0b3ce64a"
            ]
        ]
    },
    {
        "id": "71d7a834.b67f68",
        "type": "link out",
        "z": "80918f6b.83622",
        "name": "",
        "links": [
            "9f64c76c.5779d",
            "d15dd95e.1b0b5"
        ],
        "x": 775,
        "y": 1060,
        "wires": []
    },
    {
        "id": "0a483f02bb39d601",
        "type": "subflow:39e2813af6722ac8",
        "z": "80918f6b.83622",
        "name": "",
        "x": 650,
        "y": 1060,
        "wires": [
            [
                "71d7a834.b67f68"
            ]
        ]
    },
    {
        "id": "a693f7cdce8716fb",
        "type": "link out",
        "z": "80918f6b.83622",
        "name": "",
        "mode": "link",
        "links": [
            "35036829.841c5"
        ],
        "x": 555,
        "y": 1020,
        "wires": []
    },
    {
        "id": "6ae623feb3e9882b",
        "type": "PID",
        "z": "80918f6b.83622",
        "name": "Tensile PID Controller",
        "setpoint": "0",
        "pb": "10",
        "ti": "10000",
        "td": "0",
        "integral_default": "0",
        "smooth_factor": "0",
        "max_interval": 600,
        "enable": 1,
        "disabled_op": 0,
        "x": 1220,
        "y": 2360,
        "wires": [
            [
                "6e7dd7dfe78a7a70",
                "79ea6d4526652779"
            ]
        ]
    },
    {
        "id": "6e7dd7dfe78a7a70",
        "type": "range",
        "z": "80918f6b.83622",
        "minin": "0",
        "maxin": "1",
        "minout": "-100",
        "maxout": "100",
        "action": "scale",
        "round": true,
        "property": "payload",
        "name": "PID to signed motor speed",
        "x": 1500,
        "y": 2360,
        "wires": [
            [
                "b93df994fb5298c7",
                "39be58e5643d66bd"
            ]
        ]
    },
    {
        "id": "79ea6d4526652779",
        "type": "debug",
        "z": "80918f6b.83622",
        "name": "pid output",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1520,
        "y": 2060,
        "wires": []
    },
    {
        "id": "86cf2b51dc506b9f",
        "type": "subflow:b053200104e6f31e",
        "z": "80918f6b.83622",
        "name": "",
        "x": 1340,
        "y": 1980,
        "wires": [
            [
                "65d2be5b6d775b05"
            ],
            [
                "3d4c37f1536459ea"
            ],
            [
                "9c8469eb39e15363"
            ]
        ]
    },
    {
        "id": "9c8469eb39e15363",
        "type": "debug",
        "z": "80918f6b.83622",
        "name": "return",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1510,
        "y": 2020,
        "wires": []
    },
    {
        "id": "3d4c37f1536459ea",
        "type": "debug",
        "z": "80918f6b.83622",
        "name": "Error",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1510,
        "y": 1980,
        "wires": []
    },
    {
        "id": "65d2be5b6d775b05",
        "type": "debug",
        "z": "80918f6b.83622",
        "name": "out",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1510,
        "y": 1940,
        "wires": []
    },
    {
        "id": "a3291006a20c4eb1",
        "type": "change",
        "z": "80918f6b.83622",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "direction",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 1980,
        "wires": [
            []
        ]
    },
    {
        "id": "6002c0c447cf15e8",
        "type": "ui_button",
        "z": "80918f6b.83622",
        "name": "",
        "group": "7a34a153.27eab",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Actuator Retract",
        "tooltip": "Runs the actuator for 100ms",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "actuatorspeed",
        "payloadType": "flow",
        "topic": "topic",
        "topicType": "msg",
        "x": 860,
        "y": 1980,
        "wires": [
            [
                "ae20f800.83ba3"
            ]
        ]
    },
    {
        "id": "b25261d0fe508a2d",
        "type": "function",
        "z": "80918f6b.83622",
        "name": "format for extension",
        "func": "var actuator = flow.get(\"actuator\");\nvar pidEnabled = flow.get(\"pidEnabled\");\n\nif((actuator == 1) && (pidEnabled == 0)) { \n    msg.payload = -1 * Math.abs(msg.payload);\n} else {\n    msg.payload = 0; \n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 2020,
        "wires": [
            [
                "86cf2b51dc506b9f"
            ]
        ]
    },
    {
        "id": "b93df994fb5298c7",
        "type": "switch",
        "z": "80918f6b.83622",
        "name": "Check PID enabled",
        "property": "pidEnabled",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1530,
        "y": 2320,
        "wires": [
            [
                "bf9851a7dd0af6da"
            ]
        ]
    },
    {
        "id": "bf9851a7dd0af6da",
        "type": "switch",
        "z": "80918f6b.83622",
        "name": "Check Actuator enable",
        "property": "actuator",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1520,
        "y": 2280,
        "wires": [
            [
                "86cf2b51dc506b9f"
            ]
        ]
    },
    {
        "id": "fc8bc492f499c29a",
        "type": "change",
        "z": "80918f6b.83622",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "Avg Tension",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 930,
        "y": 2440,
        "wires": [
            [
                "79264a5b25abc21c"
            ]
        ]
    },
    {
        "id": "2320837f46723430",
        "type": "smooth",
        "z": "80918f6b.83622",
        "name": "",
        "property": "payload",
        "action": "mean",
        "count": "5",
        "round": "2",
        "mult": "single",
        "reduce": false,
        "x": 720,
        "y": 2360,
        "wires": [
            [
                "34f78899.aa8fb8",
                "fc8bc492f499c29a",
                "6ae623feb3e9882b",
                "b9c3780fa3d4700c",
                "cd5d5fb39d80b91c"
            ]
        ]
    },
    {
        "id": "b9c3780fa3d4700c",
        "type": "debug",
        "z": "80918f6b.83622",
        "name": "pid input",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 920,
        "y": 2480,
        "wires": []
    },
    {
        "id": "336da45a6b971757",
        "type": "ui_gauge",
        "z": "80918f6b.83622",
        "name": "",
        "group": "8cd74c77.29fdf",
        "order": 3,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Target Tension",
        "label": "kg",
        "format": "{{msg.payload}}",
        "min": "-10",
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 980,
        "y": 2120,
        "wires": []
    },
    {
        "id": "79264a5b25abc21c",
        "type": "ui_chart",
        "z": "80918f6b.83622",
        "name": "",
        "group": "f44b46f2.4aaa",
        "order": 4,
        "width": 0,
        "height": 0,
        "label": "Applied Tension",
        "chartType": "line",
        "legend": "false",
        "xformat": "mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "150",
        "removeOlderPoints": "1000",
        "removeOlderUnit": "1",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1100,
        "y": 2440,
        "wires": [
            []
        ]
    },
    {
        "id": "3371944d6a663ef5",
        "type": "function",
        "z": "80918f6b.83622",
        "name": "Select control mode",
        "func": "var temp = msg.payload;\nif (typeof temp == \"undefined\") {\n    node.warn(\"it's not\");\n}\n// node.warn(\"msg \"+msg.playload);\nif (msg.payload == true) {\n    msg.payload = flow.get(\"automatic\");\n} else {\n    msg.payload = flow.get(\"manualDisp\");\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 1860,
        "wires": [
            [
                "b1eac518688540a1"
            ]
        ]
    },
    {
        "id": "7be9e13eb73ab8fb",
        "type": "inject",
        "z": "80918f6b.83622",
        "name": "Initialize false",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 80,
        "y": 1860,
        "wires": [
            [
                "166637d5.b60258"
            ]
        ],
        "info": "Used to initialize a zero state for most of the tension UI elements and variables"
    },
    {
        "id": "d92056c0d198e2eb",
        "type": "change",
        "z": "80918f6b.83622",
        "name": "Set Automatic Mode display",
        "rules": [
            {
                "t": "set",
                "p": "automatic",
                "pt": "flow",
                "to": "[{\"title\":\"Manual Tension\",\"icon_name\":\"radio_button_unchecked\"},{\"title\":\"Automatic Tension\",\"icon_name\":\"radio_button_checked\"}]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 1920,
        "wires": [
            []
        ]
    },
    {
        "id": "a0b8151380bea5ce",
        "type": "change",
        "z": "80918f6b.83622",
        "name": "Set Manual Mode display",
        "rules": [
            {
                "t": "set",
                "p": "manualDisp",
                "pt": "flow",
                "to": "[{\"title\":\"Manual Tension\",\"icon_name\":\"radio_button_checked\"},{\"title\":\"Automatic Tension\",\"icon_name\":\"radio_button_unchecked\"}]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 310,
        "y": 1960,
        "wires": [
            []
        ]
    },
    {
        "id": "c547d36f72ae225a",
        "type": "inject",
        "z": "80918f6b.83622",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 110,
        "y": 1920,
        "wires": [
            [
                "d92056c0d198e2eb"
            ]
        ]
    },
    {
        "id": "b1eac518688540a1",
        "type": "ui_list",
        "z": "80918f6b.83622",
        "group": "7a34a153.27eab",
        "name": "",
        "order": 4,
        "width": 0,
        "height": 0,
        "lineType": "one",
        "actionType": "none",
        "allowHTML": false,
        "outputs": 0,
        "topic": "",
        "x": 770,
        "y": 1860,
        "wires": []
    },
    {
        "id": "cff8b8914d52f58d",
        "type": "inject",
        "z": "80918f6b.83622",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 110,
        "y": 1960,
        "wires": [
            [
                "a0b8151380bea5ce"
            ]
        ]
    },
    {
        "id": "b11f639b04f3efb1",
        "type": "function",
        "z": "80918f6b.83622",
        "name": "Enable/Disable PID",
        "func": "var temp = msg.payload;\n\nif (msg.payload == true) {\n    msg.payload = 1;\n    flow.set(\"pidEnabled\",1);\n} else {\n    msg.payload = 0;\n    flow.set(\"pidEnabled\",0);\n}\nmsg.topic = \"enable\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 2300,
        "wires": [
            [
                "6ae623feb3e9882b"
            ]
        ]
    },
    {
        "id": "39be58e5643d66bd",
        "type": "debug",
        "z": "80918f6b.83622",
        "name": "scaled pid output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1550,
        "y": 2420,
        "wires": []
    },
    {
        "id": "c1850dd81534ec50",
        "type": "change",
        "z": "80918f6b.83622",
        "name": "Set payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.newtons",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 770,
        "y": 2220,
        "wires": [
            [
                "6b0c7b28.ed902c",
                "336da45a6b971757",
                "94bf9fb90ac15d9d"
            ]
        ]
    },
    {
        "id": "22c6eae9272877dc",
        "type": "link out",
        "z": "80918f6b.83622",
        "name": "enable PID",
        "mode": "link",
        "links": [
            "8281c86e7c20a571"
        ],
        "x": 515,
        "y": 1900,
        "wires": []
    },
    {
        "id": "8281c86e7c20a571",
        "type": "link in",
        "z": "80918f6b.83622",
        "name": "",
        "links": [
            "22c6eae9272877dc"
        ],
        "x": 795,
        "y": 2300,
        "wires": [
            [
                "b11f639b04f3efb1"
            ]
        ]
    },
    {
        "id": "94bf9fb90ac15d9d",
        "type": "change",
        "z": "80918f6b.83622",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "setpoint",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 970,
        "y": 2220,
        "wires": [
            [
                "6ae623feb3e9882b"
            ]
        ]
    },
    {
        "id": "cd5d5fb39d80b91c",
        "type": "link out",
        "z": "80918f6b.83622",
        "name": "currentTension",
        "mode": "link",
        "links": [],
        "x": 875,
        "y": 2520,
        "wires": []
    },
    {
        "id": "880a338331a21a4d",
        "type": "function",
        "z": "a44cea4be8cdb65d",
        "name": "Prepare reload flows header",
        "func": "\nvar secret_token = msg.payload.access_token\n\nmsg.payload = {}\nmsg.headers = {}\nmsg.method = \"POST\"\nmsg.url = \"http://nodered.test.com:1880/flows\" ;\n\nmsg.headers[\"Authorization\"] = \"Bearer \" + secret_token\nmsg.headers[\"content-type\"] = \"application/json\"\nmsg.headers[\"Node-RED-Deployment-Type\"] = \"reload\"\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 340,
        "wires": [
            [
                "06bbbe481f4e9155",
                "fb0f73fd1309d014"
            ]
        ]
    },
    {
        "id": "06bbbe481f4e9155",
        "type": "http request",
        "z": "a44cea4be8cdb65d",
        "name": "Request reload flows",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1180,
        "y": 400,
        "wires": [
            [
                "22e2281626f78481"
            ]
        ]
    },
    {
        "id": "b4d34199e00e0e4b",
        "type": "inject",
        "z": "a44cea4be8cdb65d",
        "name": "Hourly",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3600",
        "crontab": "",
        "once": false,
        "onceDelay": "20",
        "topic": "",
        "payloadType": "date",
        "x": 180,
        "y": 280,
        "wires": [
            [
                "bdeb53f7f3a9080e"
            ]
        ]
    },
    {
        "id": "22e2281626f78481",
        "type": "debug",
        "z": "a44cea4be8cdb65d",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1450,
        "y": 400,
        "wires": []
    },
    {
        "id": "bdeb53f7f3a9080e",
        "type": "function",
        "z": "a44cea4be8cdb65d",
        "name": "Pepare auth token header",
        "func": "msg.headers = {}\nmsg.method = \"POST\"\nmsg.url = \"http://nodered.test.com:1880/auth/token\" ;\nmsg.headers[\"content-type\"] = \"application/json\"\n\n\nmsg.payload = {\n\"client_id\":\"node-red-admin\",\n\"grant_type\":\"password\",\n\"scope\":\"*\",\n\"username\":\"your_username\",\n\"password\":\"your_password\"\n}\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 280,
        "wires": [
            [
                "e18a15e1dafaa148"
            ]
        ]
    },
    {
        "id": "e18a15e1dafaa148",
        "type": "http request",
        "z": "a44cea4be8cdb65d",
        "name": "Request auth token",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 630,
        "y": 280,
        "wires": [
            [
                "880a338331a21a4d",
                "a524d01d1ddfb876"
            ]
        ]
    },
    {
        "id": "a524d01d1ddfb876",
        "type": "debug",
        "z": "a44cea4be8cdb65d",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1470,
        "y": 280,
        "wires": []
    },
    {
        "id": "fb0f73fd1309d014",
        "type": "debug",
        "z": "a44cea4be8cdb65d",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1450,
        "y": 340,
        "wires": []
    }
]